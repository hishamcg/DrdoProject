<launch>
  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />
  <!-- Allow user to specify database location -->
  <arg name="db_path" default="$(find labrob_moveit_generated)/default_warehouse_mongo_db" />
  
  
  <!-- roslaunch arguments -->
  <!--arg name="show_rviz" default="true"/-->
  <arg name="paused" default="false"/>
  <arg name="debug" default="false"/>  
  <arg name="gui" default="true"/>
  
  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find labrob_moveit_generated)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>
  
  <!-- If needed, broadcast static tf for robot root 
    <node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_0" args="0 0 0 0 0 0 world base_link 100" />-->
 
  <!-- We do not have a robot connected, so publish fake joint states 
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="false"/>
    <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
  </node>-->
  
  <!-- Given the published joint states, publish tf for the robot links 
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />-->
  
  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find labrob_moveit_generated)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="true"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>
  
  <!-- We resume the logic in empty_world.launch, changing only the name of 
    the world to be launched -->
  <include file="$(find labrob_gazebo)/launch/labrob_world.launch">
    <!-- <arg name="world_name" value="worlds/empty.world" /> -->
    <arg name="paused" value="$(arg paused)" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />    
    <arg name="use_sim_time" value="true" />
    <arg name="headless" value="false" />
  </include>
  
  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(find labrob_moveit_generated)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- If database loading was enabled, start mongodb as well -->
  <include file="$(find labrob_moveit_generated)/launch/default_warehouse_db.launch" if="$(arg db)">
    <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
  </include>
 
  <!-- urdf xml robot description loaded on the Parameter Server-->
  <!--param name="robot_description" command="$(find xacro)/xacro.py '$(find labrob_description)/urdf/pioneer3dx.xacro'" /-->
 
  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="labrob_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model pioneer" />
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
 
</launch>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="pioneer" >
  <xacro:include filename="$(find pioneer_cyton_description)/robot/pioneer.urdf" />
  
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <robotNamespace>/</robotNamespace>
      <alwaysOn>true</alwaysOn>
      <updateRate>100</updateRate>
      <leftJoint>l_wheel_joint</leftJoint>
      <rightJoint>r_wheel_joint</rightJoint>
      <torque>5</torque>
      <wheelSeparation>0.39</wheelSeparation>
      <wheelDiameter>0.15</wheelDiameter>
      <commandTopic>/pioneer/cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
      <publishWheelTF>true</publishWheelTF>
      <publishWheelJointState>true</publishWheelJointState>
      <wheelAcceleration>0</wheelAcceleration>
      <wheelTorque>5</wheelTorque>
      <rosDebugLevel>na</rosDebugLevel>
    </plugin>
  </gazebo>
  
	<gazebo reference="base_link">
		<kp>500000.0</kp>
    <kd>10.0</kd>
    <fdir1>1 0 0</fdir1>
    <maxVel>1.0</maxVel>
    <minDepth>0.003</minDepth>
    <mu1>10</mu1>
    <mu2>10</mu2>
    <material value="Gazebo/Black"/>
	</gazebo>
  
	<gazebo reference="l_wheel_link">
		<kp>10000000.0</kp>
    <kd>1.0</kd>
    <fdir1>1 0 0</fdir1>
    <maxVel>1.0</maxVel>
    <minDepth>0.003</minDepth>
		<mu1>1.0</mu1>
		<mu2>1.0</mu2>
		<material value="Gazebo/Black"/>
	</gazebo>
	
	<gazebo reference="r_wheel_link">
		<kp>500000.0</kp>
    <kd>10.0</kd>
    <fdir1>1 0 0</fdir1>
    <maxVel>1.0</maxVel>
    <minDepth>0.003</minDepth>
    <mu1>10</mu1>
    <mu2>10</mu2>
    <material value="Gazebo/Black"/>
	</gazebo>

	<!-- Chassis -->
	<gazebo reference="chassis">
		<material value="Gazebo/Red"/>
	</gazebo>
	
	<!-- Top -->
	<gazebo reference="top_plate">
		<material value="Gazebo/Black"/>
	</gazebo>
	
	<!-- Swivel -->
	<gazebo reference="swivel">
		<material value="Gazebo/Grey"/>
	</gazebo>

  <!-- Center Wheel + Hubcap -->
	<gazebo reference="center_hubcap">
		<material value="Gazebo/Grey"/>
	</gazebo>
	
	<gazebo reference="center_wheel">
		<material value="Gazebo/Black"/>
	</gazebo>
	
	<gazebo reference="left_hub">
		<material value="Gazebo/Yellow"/>
	</gazebo>

	<gazebo reference="right_hub">
		<material value="Gazebo/Yellow"/>
	</gazebo>
	
  <!-- Front + Back Sonar -->
	<gazebo reference="front_sonar">
		<material value="Gazebo/Yellow"/>
	</gazebo>

	<gazebo reference="back_sonar">
		<material value="Gazebo/Yellow"/>
	</gazebo>
	
	<!-- Gripper is another fallacy of physics -->
  <gazebo reference="l_gripper_finger_link">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="r_gripper_finger_link">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/Grey</material>
  </gazebo>

  <!-- SICK TIM561 (25m Range) -->
  <gazebo reference="laser_link">
    <sensor type="ray" name="base_laser">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>15</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>662</samples>
            <resolution>1</resolution>
            <min_angle>-1.91986</min_angle>
            <max_angle>1.91986</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.05</min>
          <max>25.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <!-- Noise parameters based on spec for SICK TIM561 (10m version) -->
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.02</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_base_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/base_scan</topicName>
        <frameName>laser_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

  
  <!--kinect-->
  <gazebo reference="camera_link">  
      <sensor type="depth" name="camera">
        <always_on>true</always_on>
        <update_rate>15.0</update_rate>
        <camera>
        <!--60,3.04719755,8.0-->
          <horizontal_fov>1.04719755</horizontal_fov>
          <image>
            <format>R8G8B8</format>
            <width>640</width>
            <!--width>640</width-->
            <height>480</height>
          </image>
          <clip>
            <near>0.05</near>
            <far>20.0</far>
          </clip>
        </camera>
        <plugin name="head_camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <cameraName>head_camera</cameraName>
          <alwaysOn>true</alwaysOn>
          <updateRate>15.0</updateRate>
          <imageTopicName>/head_camera/rgb/image_raw</imageTopicName>
          <depthImageTopicName>/head_camera/depth_registered/image_raw</depthImageTopicName>
          <pointCloudTopicName>/head_camera/depth_registered/points</pointCloudTopicName>
          <cameraInfoTopicName>/head_camera/rgb/camera_info</cameraInfoTopicName>
          <depthImageCameraInfoTopicName>/head_camera/depth_registered/camera_info</depthImageCameraInfoTopicName>
          <frameName>camera_depth_optical_frame</frameName>
          <pointCloudCutoff>0.35</pointCloudCutoff>
          <pointCloudCutoffMax>4.5</pointCloudCutoffMax>
          <baseline>0.1</baseline>
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
          <pointCloudCutoff>0.4</pointCloudCutoff>
        </plugin>
      </sensor>
    </gazebo>

  <!-- Load the plugin -->
  <gazebo>
    <plugin name="pioneer_cyton_gazebo_plugin" filename="libpioneer_cyton_gazebo_plugin.so"/>
  </gazebo> 

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/pioneer</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>

</robot>